---
# Workflow for triggering a release.
name: Release
on:
#  schedule:
#    - cron: '0 0 * * *'
  workflow_dispatch: # Dispatch runs build and validate, then push to the appropriate storage location.
    inputs:
      type:
        description: Build Type
        default: nightly
        required: true
      version:
        description: Version Tag
        default: nightly
        required: true
concurrency: # This keeps multiple instances of the job from running concurrently for the same ref and event type.
  group: release-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true
jobs:
  update-changelogs:
    name: Update changelog
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.target.outputs.ref }}
      version: ${{ steps.target.outputs.version }}
      type: ${{ steps.target.outputs.type }}
      run: ${{ steps.target.outputs.run }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: Prepare base ref
        id: target
        run: >-
          .github/scripts/prepare-release-base.sh \
              ${{ github.repository }} \
              ${{ github.event_name }} \
              ${{ github.event.inputs.type }} \
              ${{ github.event.inputs.version }}

  trigger-artifacts:
    name: Trigger artifact builds
    runs-on: ubuntu-latest
    needs: update-changelogs
    if: needs.update-changelogs.outputs.run == 'true'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.update-changelogs.outputs.ref }}
      - run: echo ${{ needs.update-changelogs.outputs.run }} ${{ needs.update-changelogs.outputs.type }}

  trigger-docker:
    name: Trigger docker builds
    runs-on: ubuntu-latest
    needs: update-changelogs
    if: needs.update-changelogs.outputs.run == 'true'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.update-changelogs.outputs.ref }}
      - run: echo ${{ needs.update-changelogs.outputs.run }} ${{ needs.update-changelogs.outputs.type }}

  trigger-packages:
    name: Trigger package builds
    runs-on: ubuntu-latest
    needs: update-changelogs
    if: needs.update-changelogs.outputs.run == 'true'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.update-changelogs.outputs.ref }}
      - run: echo ${{ needs.update-changelogs.outputs.run }} ${{ needs.update-changelogs.outputs.type }}
